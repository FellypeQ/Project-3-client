[{"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/index.js":"1","/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/App.js":"2","/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/About.js":"3","/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/HistoryMarketList.js":"4","/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/contexts/authContext.js":"5","/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/routeComponents/auth/AuthRouter.js":"6","/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/Home.js":"7","/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/MarketList.js":"8","/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/routeComponents/auth/Login.js":"9","/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/routeComponents/auth/Signup.js":"10","/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/Navbar.js":"11","/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/apis/api.js":"12","/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/compMarketList/Autocomplete.js":"13","/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/compMarketList/SearchBar.js":"14","/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/compMarketList/SelectItens.js":"15"},{"size":329,"mtime":1607972435332,"results":"16","hashOfConfig":"17"},{"size":1316,"mtime":1607977690751,"results":"18","hashOfConfig":"17"},{"size":1072,"mtime":1607806928352,"results":"19","hashOfConfig":"17"},{"size":142,"mtime":1607739461667,"results":"20","hashOfConfig":"17"},{"size":673,"mtime":1607710071996,"results":"21","hashOfConfig":"17"},{"size":484,"mtime":1607710072019,"results":"22","hashOfConfig":"17"},{"size":648,"mtime":1607977690752,"results":"23","hashOfConfig":"17"},{"size":1233,"mtime":1607979991457,"results":"24","hashOfConfig":"17"},{"size":2522,"mtime":1607873909036,"results":"25","hashOfConfig":"17"},{"size":2722,"mtime":1607873909040,"results":"26","hashOfConfig":"17"},{"size":1455,"mtime":1607977690753,"results":"27","hashOfConfig":"17"},{"size":619,"mtime":1607710071970,"results":"28","hashOfConfig":"17"},{"size":5771,"mtime":1607953499336,"results":"29","hashOfConfig":"17"},{"size":382,"mtime":1607953499338,"results":"30","hashOfConfig":"17"},{"size":9769,"mtime":1607972435322,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p7cp3h",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/index.js",[],"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/App.js",[],"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/About.js",[],"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/HistoryMarketList.js",[],"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/contexts/authContext.js",[],"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/routeComponents/auth/AuthRouter.js",[],"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/Home.js",[],"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/MarketList.js",[],"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/routeComponents/auth/Login.js",[],"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/routeComponents/auth/Signup.js",["64"],"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/Navbar.js",[],"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/apis/api.js",[],"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/compMarketList/Autocomplete.js",[],["65","66"],"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/compMarketList/SearchBar.js",[],"/mnt/c/Users/felly/Documents/IronHack/Project-3-client/src/components/compMarketList/SelectItens.js",["67"],"import React, { useState, useEffect } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nfunction SelectItens(props) {\r\n  //instancia cada categoria em branco\r\n  const [despensa, setDespensa] = useState([]);\r\n  const [freezer, setFreezer] = useState([]);\r\n  const [geladeira, setGeladeira] = useState([]);\r\n  const [frutasHortalicas, setFrutasHortalicas] = useState([]);\r\n  const [higiene, setHigiene] = useState([]);\r\n\r\n  const [listaDND, setListaDND] = useState([\r\n    { despensa },\r\n    { freezer },\r\n    { geladeira },\r\n    { frutasHortalicas },\r\n    { higiene },\r\n  ]);\r\n\r\n  //função que retorna um objeto com a categoria e o produto selecionado\r\n  function getCategory(product, list, categorySelected) {\r\n    for (let i = 0; i < Object.keys(list).length; i++) {\r\n      if (Object.values(list)[i].indexOf(product) >= 0)\r\n        return { categoria: Object.keys(list)[i], produto: product };\r\n    }\r\n    return { categoria: categorySelected, produto: product };\r\n  }\r\n\r\n  //useeffect que atualiza os states dependendo de qual categoria é retornada na função acima\r\n  useEffect(() => {\r\n    if (\r\n      props.atual.length > 0 &&\r\n      getCategory(props.atual, props.original, props.newCategory).categoria ===\r\n        \"Despensa\"\r\n    ) {\r\n      setDespensa([\r\n        ...despensa,\r\n        getCategory(props.atual, props.original, props.newCategory),\r\n      ]);\r\n    }\r\n    if (\r\n      props.atual.length > 0 &&\r\n      getCategory(props.atual, props.original, props.newCategory).categoria ===\r\n        \"Freezer\"\r\n    ) {\r\n      setFreezer([\r\n        ...freezer,\r\n        getCategory(props.atual, props.original, props.newCategory),\r\n      ]);\r\n    }\r\n    if (\r\n      props.atual.length > 0 &&\r\n      getCategory(props.atual, props.original, props.newCategory).categoria ===\r\n        \"Geladeira\"\r\n    ) {\r\n      setGeladeira([\r\n        ...geladeira,\r\n        getCategory(props.atual, props.original, props.newCategory),\r\n      ]);\r\n    }\r\n    if (\r\n      props.atual.length > 0 &&\r\n      getCategory(props.atual, props.original, props.newCategory).categoria ===\r\n        \"Frutas e Hortaliças\"\r\n    ) {\r\n      setFrutasHortalicas([\r\n        ...frutasHortalicas,\r\n        getCategory(props.atual, props.original, props.newCategory),\r\n      ]);\r\n    }\r\n    if (\r\n      props.atual.length > 0 &&\r\n      getCategory(props.atual, props.original, props.newCategory).categoria ===\r\n        \"Higiene\"\r\n    ) {\r\n      setHigiene([\r\n        ...higiene,\r\n        getCategory(props.atual, props.original, props.newCategory),\r\n      ]);\r\n    }\r\n  }, [props]);\r\n\r\n  //função drag and drop\r\n  function handleOnDragEnd(result) {\r\n    const items = [...listaDND];\r\n    console.log(listaDND);\r\n    const [reordedItems] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reordedItems);\r\n    setListaDND(items);\r\n  }\r\n\r\n  //o return está com ternário porque no return não aceita if, mas eles olham de o state está prrenchido, e caso esteja rederiza uma tabela com o conteudo do seu respectivo state\r\n  return (\r\n    <React.Fragment>\r\n      <DragDropContext onDragEnd={handleOnDragEnd}>\r\n        <Droppable droppableId=\"itemList\">\r\n          {(provided) => (\r\n            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n              <Draggable draggableId={\"despensa\"} index={0}>\r\n                {(provided) => (\r\n                  <div\r\n                    className=\"text-center my-3\"\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {despensa.length > 0 ? (\r\n                      <table className=\"tableSelected\">\r\n                        <thead className=\"tableHead\">\r\n                          <tr>\r\n                            <th>Produto</th>\r\n                            <th>Categoria</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody className=\"tableBody\">\r\n                          {despensa.map((element, idx) => (\r\n                            <tr key={idx}>\r\n                              <td>{element.produto}</td>\r\n                              <td>{element.categoria}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n              <Draggable draggableId={\"freezer\"} index={1}>\r\n                {(provided) => (\r\n                  <div\r\n                    className=\"text-center my-3\"\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {freezer.length > 0 ? (\r\n                      <table className=\"tableSelected\">\r\n                        <thead className=\"tableHead\">\r\n                          <tr>\r\n                            <th>Produto</th>\r\n                            <th>Categoria</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody className=\"tableBody\">\r\n                          {freezer.map((element, idx) => (\r\n                            <tr key={idx}>\r\n                              <td>{element.produto}</td>\r\n                              <td>{element.categoria}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n              <Draggable draggableId={\"geladeira\"} index={2}>\r\n                {(provided) => (\r\n                  <div\r\n                    className=\"text-center my-3\"\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {geladeira.length > 0 ? (\r\n                      <table className=\"tableSelected\">\r\n                        <thead className=\"tableHead\">\r\n                          <tr>\r\n                            <th>Produto</th>\r\n                            <th>Categoria</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody className=\"tableBody\">\r\n                          {geladeira.map((element, idx) => (\r\n                            <tr key={idx}>\r\n                              <td>{element.produto}</td>\r\n                              <td>{element.categoria}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n              <Draggable draggableId={\"frutasHortalicas\"} index={3}>\r\n                {(provided) => (\r\n                  <div\r\n                    className=\"text-center my-3\"\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {frutasHortalicas.length > 0 ? (\r\n                      <table className=\"tableSelected\">\r\n                        <thead className=\"tableHead\">\r\n                          <tr>\r\n                            <th>Produto</th>\r\n                            <th>Categoria</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody className=\"tableBody\">\r\n                          {frutasHortalicas.map((element, idx) => (\r\n                            <tr key={idx}>\r\n                              <td>{element.produto}</td>\r\n                              <td>{element.categoria}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n              <Draggable draggableId={\"higiene\"} index={4}>\r\n                {(provided) => (\r\n                  <div\r\n                    className=\"text-center my-3\"\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {higiene.length > 0 ? (\r\n                      <table className=\"tableSelected\">\r\n                        <thead className=\"tableHead\">\r\n                          <tr>\r\n                            <th>Produto</th>\r\n                            <th>Categoria</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody className=\"tableBody\">\r\n                          {higiene.map((element, idx) => (\r\n                            <tr key={idx}>\r\n                              <td>{element.produto}</td>\r\n                              <td>{element.categoria}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SelectItens;\r\n",{"ruleId":"68","severity":1,"message":"69","line":24,"column":13,"nodeType":"70","messageId":"71","endLine":24,"endColumn":21},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":81,"column":6,"nodeType":"78","endLine":81,"endColumn":13,"suggestions":"79"},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'despensa', 'freezer', 'frutasHortalicas', 'geladeira', and 'higiene'. Either include them or remove the dependency array. You can also do a functional update 'setDespensa(d => ...)' if you only need 'despensa' in the 'setDespensa' call.","ArrayExpression",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [despensa, freezer, frutasHortalicas, geladeira, higiene, props]",{"range":"85","text":"86"},[2583,2590],"[despensa, freezer, frutasHortalicas, geladeira, higiene, props]"]