[{"/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/index.js":"1","/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/App.js":"2","/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/About.js":"3","/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/Home.js":"4","/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/HistoryMarketList.js":"5","/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/contexts/authContext.js":"6","/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/MarketList.js":"7","/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/routeComponents/auth/AuthRouter.js":"8","/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/Navbar.js":"9","/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/routeComponents/auth/Signup.js":"10","/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/routeComponents/auth/Login.js":"11","/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/compMarketList/Autocomplete.js":"12","/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/compMarketList/SelectItens.js":"13","/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/compMarketList/SearchBar.js":"14","/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/apis/api.js":"15"},{"size":312,"mtime":1607972758866,"results":"16","hashOfConfig":"17"},{"size":1509,"mtime":1607996636194,"results":"18","hashOfConfig":"17"},{"size":1042,"mtime":1607803008760,"results":"19","hashOfConfig":"17"},{"size":617,"mtime":1607996645002,"results":"20","hashOfConfig":"17"},{"size":135,"mtime":1607801416195,"results":"21","hashOfConfig":"17"},{"size":673,"mtime":1607710111822,"results":"22","hashOfConfig":"17"},{"size":1172,"mtime":1607997531827,"results":"23","hashOfConfig":"17"},{"size":484,"mtime":1607710111839,"results":"24","hashOfConfig":"17"},{"size":1451,"mtime":1607997625995,"results":"25","hashOfConfig":"17"},{"size":2591,"mtime":1607996685508,"results":"26","hashOfConfig":"17"},{"size":2519,"mtime":1607996665318,"results":"27","hashOfConfig":"17"},{"size":5708,"mtime":1608001178455,"results":"28","hashOfConfig":"17"},{"size":9506,"mtime":1607972758852,"results":"29","hashOfConfig":"17"},{"size":398,"mtime":1607998880476,"results":"30","hashOfConfig":"17"},{"size":619,"mtime":1607710111798,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ld2m8a",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/index.js",[],"/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/App.js",[],"/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/About.js",[],["64","65"],"/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/Home.js",[],"/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/HistoryMarketList.js",[],"/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/contexts/authContext.js",[],"/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/MarketList.js",[],"/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/routeComponents/auth/AuthRouter.js",[],"/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/Navbar.js",[],"/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/routeComponents/auth/Signup.js",["66"],"/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/routeComponents/auth/Login.js",[],"/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/compMarketList/Autocomplete.js",[],"/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/compMarketList/SelectItens.js",["67"],"import React, { useState, useEffect } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nfunction SelectItens(props) {\n  //instancia cada categoria em branco\n  const [despensa, setDespensa] = useState([]);\n  const [freezer, setFreezer] = useState([]);\n  const [geladeira, setGeladeira] = useState([]);\n  const [frutasHortalicas, setFrutasHortalicas] = useState([]);\n  const [higiene, setHigiene] = useState([]);\n\n  const [listaDND, setListaDND] = useState([\n    { despensa },\n    { freezer },\n    { geladeira },\n    { frutasHortalicas },\n    { higiene },\n  ]);\n\n  //função que retorna um objeto com a categoria e o produto selecionado\n  function getCategory(product, list, categorySelected) {\n    for (let i = 0; i < Object.keys(list).length; i++) {\n      if (Object.values(list)[i].indexOf(product) >= 0)\n        return { categoria: Object.keys(list)[i], produto: product };\n    }\n    return { categoria: categorySelected, produto: product };\n  }\n\n  //useeffect que atualiza os states dependendo de qual categoria é retornada na função acima\n  useEffect(() => {\n    if (\n      props.atual.length > 0 &&\n      getCategory(props.atual, props.original, props.newCategory).categoria ===\n        \"Despensa\"\n    ) {\n      setDespensa([\n        ...despensa,\n        getCategory(props.atual, props.original, props.newCategory),\n      ]);\n    }\n    if (\n      props.atual.length > 0 &&\n      getCategory(props.atual, props.original, props.newCategory).categoria ===\n        \"Freezer\"\n    ) {\n      setFreezer([\n        ...freezer,\n        getCategory(props.atual, props.original, props.newCategory),\n      ]);\n    }\n    if (\n      props.atual.length > 0 &&\n      getCategory(props.atual, props.original, props.newCategory).categoria ===\n        \"Geladeira\"\n    ) {\n      setGeladeira([\n        ...geladeira,\n        getCategory(props.atual, props.original, props.newCategory),\n      ]);\n    }\n    if (\n      props.atual.length > 0 &&\n      getCategory(props.atual, props.original, props.newCategory).categoria ===\n        \"Frutas e Hortaliças\"\n    ) {\n      setFrutasHortalicas([\n        ...frutasHortalicas,\n        getCategory(props.atual, props.original, props.newCategory),\n      ]);\n    }\n    if (\n      props.atual.length > 0 &&\n      getCategory(props.atual, props.original, props.newCategory).categoria ===\n        \"Higiene\"\n    ) {\n      setHigiene([\n        ...higiene,\n        getCategory(props.atual, props.original, props.newCategory),\n      ]);\n    }\n  }, [props]);\n\n  //função drag and drop\n  function handleOnDragEnd(result) {\n    const items = [...listaDND];\n    console.log(listaDND);\n    const [reordedItems] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reordedItems);\n    setListaDND(items);\n  }\n\n  //o return está com ternário porque no return não aceita if, mas eles olham de o state está prrenchido, e caso esteja rederiza uma tabela com o conteudo do seu respectivo state\n  return (\n    <React.Fragment>\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        <Droppable droppableId=\"itemList\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              <Draggable draggableId={\"despensa\"} index={0}>\n                {(provided) => (\n                  <div\n                    className=\"text-center my-3\"\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                  >\n                    {despensa.length > 0 ? (\n                      <table className=\"tableSelected\">\n                        <thead className=\"tableHead\">\n                          <tr>\n                            <th>Produto</th>\n                            <th>Categoria</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"tableBody\">\n                          {despensa.map((element, idx) => (\n                            <tr key={idx}>\n                              <td>{element.produto}</td>\n                              <td>{element.categoria}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    ) : (\n                      <></>\n                    )}\n                  </div>\n                )}\n              </Draggable>\n              <Draggable draggableId={\"freezer\"} index={1}>\n                {(provided) => (\n                  <div\n                    className=\"text-center my-3\"\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                  >\n                    {freezer.length > 0 ? (\n                      <table className=\"tableSelected\">\n                        <thead className=\"tableHead\">\n                          <tr>\n                            <th>Produto</th>\n                            <th>Categoria</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"tableBody\">\n                          {freezer.map((element, idx) => (\n                            <tr key={idx}>\n                              <td>{element.produto}</td>\n                              <td>{element.categoria}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    ) : (\n                      <></>\n                    )}\n                  </div>\n                )}\n              </Draggable>\n              <Draggable draggableId={\"geladeira\"} index={2}>\n                {(provided) => (\n                  <div\n                    className=\"text-center my-3\"\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                  >\n                    {geladeira.length > 0 ? (\n                      <table className=\"tableSelected\">\n                        <thead className=\"tableHead\">\n                          <tr>\n                            <th>Produto</th>\n                            <th>Categoria</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"tableBody\">\n                          {geladeira.map((element, idx) => (\n                            <tr key={idx}>\n                              <td>{element.produto}</td>\n                              <td>{element.categoria}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    ) : (\n                      <></>\n                    )}\n                  </div>\n                )}\n              </Draggable>\n              <Draggable draggableId={\"frutasHortalicas\"} index={3}>\n                {(provided) => (\n                  <div\n                    className=\"text-center my-3\"\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                  >\n                    {frutasHortalicas.length > 0 ? (\n                      <table className=\"tableSelected\">\n                        <thead className=\"tableHead\">\n                          <tr>\n                            <th>Produto</th>\n                            <th>Categoria</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"tableBody\">\n                          {frutasHortalicas.map((element, idx) => (\n                            <tr key={idx}>\n                              <td>{element.produto}</td>\n                              <td>{element.categoria}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    ) : (\n                      <></>\n                    )}\n                  </div>\n                )}\n              </Draggable>\n              <Draggable draggableId={\"higiene\"} index={4}>\n                {(provided) => (\n                  <div\n                    className=\"text-center my-3\"\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                  >\n                    {higiene.length > 0 ? (\n                      <table className=\"tableSelected\">\n                        <thead className=\"tableHead\">\n                          <tr>\n                            <th>Produto</th>\n                            <th>Categoria</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"tableBody\">\n                          {higiene.map((element, idx) => (\n                            <tr key={idx}>\n                              <td>{element.produto}</td>\n                              <td>{element.categoria}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    ) : (\n                      <></>\n                    )}\n                  </div>\n                )}\n              </Draggable>\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </React.Fragment>\n  );\n}\n\nexport default SelectItens;\n","/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/components/compMarketList/SearchBar.js",[],"/mnt/c/users/guigu/onedrive/Área de Trabalho/dev/sitecompras/client/Project-3-client/src/apis/api.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":24,"column":13,"nodeType":"74","messageId":"75","endLine":24,"endColumn":21},{"ruleId":"76","severity":1,"message":"77","line":81,"column":6,"nodeType":"78","endLine":81,"endColumn":13,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'despensa', 'freezer', 'frutasHortalicas', 'geladeira', and 'higiene'. Either include them or remove the dependency array. You can also do a functional update 'setDespensa(d => ...)' if you only need 'despensa' in the 'setDespensa' call.","ArrayExpression",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [despensa, freezer, frutasHortalicas, geladeira, higiene, props]",{"range":"85","text":"86"},[2503,2510],"[despensa, freezer, frutasHortalicas, geladeira, higiene, props]"]